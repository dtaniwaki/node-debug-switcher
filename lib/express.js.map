{"version":3,"sources":["express.coffee"],"names":[],"mappings":"AAAA,IAAA,aAAA;;AAAA,KAAA,GAAQ,OAAA,CAAQ,SAAR,CAAR,CAAA;;AAAA,MACA,GAAS,OAAA,CAAQ,QAAR,CADT,CAAA;;AAAA,MAGM,CAAC,OAAP,GAAiB,SAAC,GAAD,EAAM,OAAN,GAAA;AACf,MAAA,2BAAA;AAAA,EAAA,YAAA,UAAY,GAAZ,CAAA;AAAA,EACA,MAAA,GAAS,OAAO,CAAC,MADjB,CAAA;AAAA,EAEA,QAAA,GAAW,OAAO,CAAC,QAFnB,CAAA;AAAA,EAGA,GAAA,GAAM,OAAO,CAAC,GAAR,IAAe,YAHrB,CAAA;AAAA,EAIA,IAAA,GAAO,OAAO,CAAC,IAJf,CAAA;AAAA,EAMA,MAAA,CAAO,IAAP,EAAa,kBAAb,CANA,CAAA;AAOA,EAAA,IAA2C,MAA3C;AAAA,IAAA,MAAA,CAAO,QAAP,EAAiB,sBAAjB,CAAA,CAAA;GAPA;SASA,SAAC,GAAD,EAAM,GAAN,EAAW,IAAX,GAAA;AACE,QAAA,iCAAA;AAAA,IAAA,KAAA,GAAQ,OAAO,CAAC,GAAI,CAAA,GAAA,CAApB,CAAA;AAEA,YAAO,IAAP;AAAA,WACO,QADP;AAEI,QAAA,QAAA,sCAAwB,CAAA,GAAA,UAAxB,CAFJ;AACO;AADP,WAGO,OAHP;AAII,QAAA,QAAA,sCAAsB,CAAA,GAAA,UAAtB,CAJJ;AAAA,KAFA;AAQA,IAAA,IAAG,QAAH;AACE,MAAA,IAAG,MAAH;AACE,QAAA,QAAA,GAAW,KAAK,CAAC,cAAN,CAAqB,QAArB,EAA+B,QAA/B,CAAX,CADF;OAAA;AAAA,MAEA,OAAO,CAAC,GAAI,CAAA,GAAA,CAAZ,GAAmB,QAFnB,CADF;KARA;AAaA;AACE,MAAA,IAAA,CAAA,CAAA,CADF;KAAA,cAAA;AAGE,MADI,YACJ,CAAA;AAAA,MAAA,OAAO,CAAC,GAAI,CAAA,GAAA,CAAZ,GAAmB,KAAnB,CAAA;AACA,YAAM,GAAN,CAJF;KAbA;WAkBA,OAAO,CAAC,GAAI,CAAA,GAAA,CAAZ,GAAmB,MAnBrB;EAAA,EAVe;AAAA,CAHjB,CAAA","file":"express.js","sourceRoot":"/src","sourcesContent":["utils = require './utils'\nassert = require 'assert'\n\nmodule.exports = (key, options) ->\n  options ||= {}\n  secure = options.secure\n  password = options.password\n  env = options.env || 'NODE_DEBUG'\n  type = options.type\n\n  assert type, 'type is required'\n  assert password, 'password is required' if secure\n\n  (req, res, next) ->\n    debug = process.env[env]\n\n    switch type\n      when 'cookie'\n        newDebug = req.cookies?[key]\n      when 'query'\n        newDebug = req.query?[key]\n\n    if newDebug\n      if secure\n        newDebug = utils.decode64Cipher(newDebug, password)\n      process.env[env] = newDebug\n\n    try\n      next()\n    catch err\n      process.env[env] = debug\n      throw err\n    process.env[env] = debug\n"]}