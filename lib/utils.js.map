{"version":3,"sources":["utils.coffee"],"names":[],"mappings":"AAAA,IAAA,MAAA;;AAAA,MAAA,GAAS,OAAA,CAAQ,QAAR,CAAT,CAAA;;AAAA,MAEM,CAAC,OAAP,GACE;AAAA,EAAA,cAAA,EAAgB,SAAC,CAAD,EAAI,QAAJ,GAAA;AACd,QAAA,MAAA;AAAA;AACE,MAAA,MAAA,GAAS,MAAM,CAAC,YAAP,CAAoB,aAApB,EAAmC,QAAnC,CAAT,CAAA;AAAA,MACA,MAAM,CAAC,MAAP,CAAc,CAAd,CADA,CAAA;aAEA,MAAM,CAAC,KAAP,CAAa,QAAb,EAHF;KAAA,cAAA;aAKE,GALF;KADc;EAAA,CAAhB;AAAA,EAQA,cAAA,EAAgB,SAAC,CAAD,EAAI,QAAJ,GAAA;AACd,QAAA,MAAA;AAAA;AACE,MAAA,MAAA,GAAS,MAAM,CAAC,cAAP,CAAsB,aAAtB,EAAqC,QAArC,CAAT,CAAA;AAAA,MACA,MAAM,CAAC,MAAP,CAAc,CAAd,EAAiB,QAAjB,CADA,CAAA;aAEA,MAAM,CAAC,KAAP,CAAA,CAAc,CAAC,QAAf,CAAA,EAHF;KAAA,cAAA;aAKE,GALF;KADc;EAAA,CARhB;CAHF,CAAA","file":"utils.js","sourceRoot":"/src","sourcesContent":["crypto = require 'crypto'\n\nmodule.exports =\n  encode64Cipher: (s, password) ->\n    try\n      cipher = crypto.createCipher('aes-256-cbc', password)\n      cipher.update s\n      cipher.final('base64')\n    catch\n      ''\n\n  decode64Cipher: (s, password) ->\n    try\n      cipher = crypto.createDecipher('aes-256-cbc', password)\n      cipher.update s, 'base64'\n      cipher.final().toString()\n    catch\n      ''\n"]}