{"version":3,"sources":["utils.js"],"names":[],"mappings":";;AAAA,IAAM,SAAS,QAAQ,QAAR,CAAT;;AAEN,OAAO,OAAP,GAAiB;AACf,kBAAgB,wBAAU,CAAV,EAAa,QAAb,EAAuB;AACrC,QAAI;AACF,UAAI,SAAS,OAAO,YAAP,CAAoB,aAApB,EAAmC,QAAnC,CAAT,CADF;AAEF,aAAO,MAAP,CAAc,CAAd,EAFE;AAGF,aAAO,OAAO,KAAP,CAAa,QAAb,CAAP,CAHE;KAAJ,CAIE,OAAO,CAAP,EAAU;AACV,aAAO,EAAP,CADU;KAAV;GALY;AAShB,kBAAgB,wBAAU,CAAV,EAAa,QAAb,EAAuB;AACrC,QAAI;AACF,UAAI,SAAS,OAAO,cAAP,CAAsB,aAAtB,EAAqC,QAArC,CAAT,CADF;AAEF,aAAO,MAAP,CAAc,CAAd,EAAiB,QAAjB,EAFE;AAGF,aAAO,OAAO,KAAP,GAAe,QAAf,EAAP,CAHE;KAAJ,CAIE,OAAO,CAAP,EAAU;AACV,aAAO,EAAP,CADU;KAAV;GALY;CAVlB","file":"utils.js","sourcesContent":["const crypto = require('crypto')\n\nmodule.exports = {\n  encode64Cipher: function (s, password) {\n    try {\n      let cipher = crypto.createCipher('aes-256-cbc', password)\n      cipher.update(s)\n      return cipher.final('base64')\n    } catch (e) {\n      return ''\n    }\n  },\n  decode64Cipher: function (s, password) {\n    try {\n      let cipher = crypto.createDecipher('aes-256-cbc', password)\n      cipher.update(s, 'base64')\n      return cipher.final().toString()\n    } catch (e) {\n      return ''\n    }\n  }\n}\n"],"sourceRoot":"/src"}