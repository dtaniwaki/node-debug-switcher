{"version":3,"sources":["koa.js"],"names":[],"mappings":";;AAAA,QAAQ,gBAAR;AACA,IAAM,QAAQ,QAAQ,SAAR,CAAR;AACN,IAAM,SAAS,QAAQ,QAAR,CAAT;;AAEN,OAAO,OAAP,GAAiB,UAAU,GAAV,EAAe,OAAf,EAAwB;aACD,WAAW,EAAX,CADC;;MACjC,qBADiC;MACzB,yBADyB;MACf,eADe;MACV,iBADU;;AAEvC,QAAM,OAAO,YAAP,CAFiC;AAGvC,SAAO,QAAQ,QAAR,CAHgC;;AAKvC,SAAO,IAAP,EAAa,kBAAb,EALuC;AAMvC,MAAI,MAAJ,EAAY;AACV,WAAO,QAAP,EAAiB,sBAAjB,EADU;GAAZ;;AAIA,iCAAO,iBAAY,IAAZ;QACD,OACA;;;;;AADA,oBAAQ,QAAQ,GAAR,CAAY,GAAZ;AACR;0BAEI;4CACD,+BAGA;;;;AAFH,uBAAW,KAAK,OAAL,CAAa,GAAb,CAAiB,GAAjB,CAAX;;;;AAGA,uBAAW,KAAK,KAAL,CAAW,GAAX,CAAX;;;;;AAIJ,gBAAI,QAAJ,EAAc;AACZ,kBAAI,MAAJ,EAAY;AACV,2BAAW,MAAM,cAAN,CAAqB,QAArB,EAA+B,QAA/B,CAAX,CADU;eAAZ;AAGA,sBAAQ,GAAR,kBAA2B,aAAQ,QAAnC,EAJY;AAKZ,sBAAQ,GAAR,CAAY,GAAZ,IAAmB,QAAnB,CALY;aAAd;;;;mBASQ;;;;;;;;;;AAEN,iBAAK,KAAL;;;;;AAEA,gBAAI,QAAJ,EAAc;AACZ,sBAAQ,GAAR,sBAA+B,aAAQ,KAAvC,EADY;AAEZ,sBAAQ,GAAR,CAAY,GAAZ,IAAmB,KAAnB,CAFY;aAAd;;;;;;;;;GA1BG,CAAP,CAVuC;CAAxB","file":"koa.js","sourcesContent":["require('babel-polyfill')\nconst utils = require('./utils')\nconst assert = require('assert')\n\nmodule.exports = function (key, options) {\n  let { secure, password, env, type } = options || {}\n  env = env || 'NODE_DEBUG'\n  type = type || 'cookie'\n\n  assert(type, 'type is required')\n  if (secure) {\n    assert(password, 'password is required')\n  }\n\n  return function * (next) {\n    let debug = process.env[env]\n    let newDebug\n\n    switch (type) {\n      case 'cookie':\n        newDebug = this.cookies.get(key)\n        break\n      case 'query':\n        newDebug = this.query[key]\n        break\n    }\n\n    if (newDebug) {\n      if (secure) {\n        newDebug = utils.decode64Cipher(newDebug, password)\n      }\n      console.log(`Set the env ${env}: ${newDebug}`)\n      process.env[env] = newDebug\n    }\n\n    try {\n      yield next\n    } catch (e) {\n      this.throw(e)\n    } finally {\n      if (newDebug) {\n        console.log(`Restore the env ${env}: ${debug}`)\n        process.env[env] = debug\n      }\n    }\n  }\n}\n"],"sourceRoot":"/src"}